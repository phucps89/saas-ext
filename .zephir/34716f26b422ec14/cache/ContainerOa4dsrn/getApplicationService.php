<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'Zephir\Console\Application' shared autowired service.

$this->services['Zephir\Console\Application'] = $instance = new \Zephir\Console\Application();

$a = ${($_ = isset($this->services['Zephir\Compiler']) ? $this->services['Zephir\Compiler'] : $this->load('getCompilerService.php')) && false ?: '_'};
$b = ${($_ = isset($this->services['Zephir\Config']) ? $this->services['Zephir\Config'] : $this->load('getConfigService.php')) && false ?: '_'};

$instance->add(new \Zephir\Console\Command\ApiCommand($a, $b));
$instance->add(new \Zephir\Console\Command\BuildCommand());
$instance->add(new \Zephir\Console\Command\CleanCommand(${($_ = isset($this->services['Zephir\FileSystem\FileSystemInterface']) ? $this->services['Zephir\FileSystem\FileSystemInterface'] : $this->load('getFileSystemInterfaceService.php')) && false ?: '_'}));
$instance->add(new \Zephir\Console\Command\CompileCommand($a));
$instance->add(new \Zephir\Console\Command\FullCleanCommand());
$instance->add(new \Zephir\Console\Command\GenerateCommand($a));
$instance->add(new \Zephir\Console\Command\InitCommand($a, ${($_ = isset($this->services['Zephir\BaseBackend']) ? $this->services['Zephir\BaseBackend'] : $this->load('getBaseBackendService.php')) && false ?: '_'}, $b, ${($_ = isset($this->services['monolog.logger.zephir']) ? $this->services['monolog.logger.zephir'] : $this->load('getMonolog_Logger_ZephirService.php')) && false ?: '_'}));
$instance->add(new \Zephir\Console\Command\InstallCommand($a, $b));
$instance->add(new \Zephir\Console\Command\StubsCommand($a));

return $instance;
