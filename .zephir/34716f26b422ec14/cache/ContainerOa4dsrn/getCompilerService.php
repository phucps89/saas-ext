<?php

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;

// This file has been auto-generated by the Symfony Dependency Injection Component for internal use.
// Returns the public 'Zephir\Compiler' shared autowired service.

$a = ${($_ = isset($this->services['Zephir\Config']) ? $this->services['Zephir\Config'] : $this->load('getConfigService.php')) && false ?: '_'};
$b = ${($_ = isset($this->services['Zephir\FileSystem\FileSystemInterface']) ? $this->services['Zephir\FileSystem\FileSystemInterface'] : $this->load('getFileSystemInterfaceService.php')) && false ?: '_'};

$this->services['Zephir\Compiler'] = $instance = new \Zephir\Compiler($a, ${($_ = isset($this->services['Zephir\BaseBackend']) ? $this->services['Zephir\BaseBackend'] : $this->load('getBaseBackendService.php')) && false ?: '_'}, new \Zephir\Parser\Manager(new \Zephir\Parser\Parser()), $b, new \Zephir\Compiler\CompilerFileFactory($a, $b, ${($_ = isset($this->services['monolog.logger.zephir']) ? $this->services['monolog.logger.zephir'] : $this->load('getMonolog_Logger_ZephirService.php')) && false ?: '_'}));

$instance->setPrototypesPath('/root/zephir/prototypes');
$instance->setOptimizersPath('/root/zephir/Library/Optimizers');
$instance->setTemplatesPath('/root/zephir/templates');
$instance->setLogger(${($_ = isset($this->services['logger']) ? $this->services['logger'] : $this->load('getLoggerService.php')) && false ?: '_'});

return $instance;
